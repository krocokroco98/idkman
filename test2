-- =================================================================
-- ===================== EVENT TRIGGER SPY SCRIPT ==================
-- =================================================================
-- This script's only job is to find how the game announces events.
-- It does not auto-farm.

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local PlayerGui = Players.LocalPlayer:WaitForChild("PlayerGui")

print("--- Event Spy Script Activated ---")
print("Waiting for a world event to start. Watch this console for output.")

-- =======================
-- Spy #1: Remote Events
-- =======================
-- Listen for any signal fired from the server.
for _, v in pairs(ReplicatedStorage:GetDescendants()) do
    if v:IsA("RemoteEvent") then
        v.OnClientEvent:Connect(function(...)
            local args = {...}
            print("---------------------------------")
            warn("REMOTE EVENT FIRED: " .. v:GetFullName())
            
            if #args > 0 then
                print("WITH ARGUMENTS:")
                for i, arg in ipairs(args) do
                    print(string.format("  - Arg %d: %s (Type: %s)", i, tostring(arg), typeof(arg)))
                end
            else
                print("Event had no arguments.")
            end
            print("---------------------------------")
        end)
    end
end

-- =======================
-- Spy #2: GUI Popups
-- =======================
-- Listen for any GUI that appears on screen.
local function spyOnGui(gui)
    if not gui:IsA("GuiObject") then return end
    
    gui:GetPropertyChangedSignal("Visible"):Connect(function()
        if gui.Visible then
            print("---------------------------------")
            warn("GUI BECAME VISIBLE: " .. gui:GetFullName())
            print("Child text labels found:")
            for _, child in pairs(gui:GetDescendants()) do
                if child:IsA("TextLabel") or child:IsA("TextButton") then
                    if child.Text and child.Text ~= "" then
                        print(string.format("  - %s says: '%s'", child.Name, child.Text))
                    end
                end
            end
            print("---------------------------------")
        end
    end)
end

PlayerGui.ChildAdded:Connect(function(child)
    if child:IsA("ScreenGui") then
        spyOnGui(child) -- Spy on newly added GUIs
        child.DescendantAdded:Connect(spyOnGui) -- Spy on things added to them later
    end
end)

for _, child in pairs(PlayerGui:GetChildren()) do
    if child:IsA("ScreenGui") then
        spyOnGui(child) -- Spy on existing GUIs
        child.DescendantAdded:Connect(spyOnGui) -- Spy on things added to them later
    end
end
